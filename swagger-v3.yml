iopenapi: 3.0.0
info:
  title: Property Location Service Plus PLSplus QG Version -REST
  description: |
    This Provides the starting point for using the QG (Qld Govt) version of the Property Location Service (PLS) Plus RESTful Implemenation. The service has a sister implementation using SOAP technology. In this document the RESTful version will always be assumed unless specifically stated as the SOAP implementation.The document describes the service functions and provides a roadmap for implementing this functionality into user systems.
    
    Access to PLSplus-QG is recommended for all government agencies.
    
    Physical address validation is free of charge, however, users are responsible for their own implementation and supporting services. Application support services are only available to the core service by DNRME.
    
    The PLSplus-QG service will validate Australian addresses by including matches across unit number, street number, street name, street type, locality, state and postcode. The solution provides users with a selection of address candidates to pick from in the case where there is no exact match. The returned confidence on addresses is mapped as per Table 1 in Section 11.4. A fast AutoComplete address function is available in PLSplus for Queensland addresses. The QG version extends the Public version by the addition of validation of interstate addresses as well as ABS statistical meshblock information for all Australian addresses.
    
    PLSplus uses addressing standards AS4819 and AS4590 as its base.
    
    There may be future enhancements, but at this stage it meets the initial specifications as an address service for point of entry confirmation of physical addressing. Any coding to ‘clean up’ returned candidate addresses needs to be performed by client applications consuming the service.
    
    
    ## Data Source
    The Queensland Address Management Framework (QAMF) dataset is used to populate the service data source for Queenland addresses. The dataset is maintained by the Department of Natural Resources and Mines (DNRME) and updated nightly for use by client applications. Interstate addresses are provided by a third party (paid) service and use the GNAFF.

    The QAMF is the primary source of property location addressing information for Queensland. It is location centric, meaning that addresses can be geocoded against a variety of locations, eg centroid of the property, centroid of the street alignment, entrance of the property and the main building. It is the point of truth for addressing in Queensland and is continually maintained from data supplied by local government authorities (LGA’s).
    
    Attributes currently stored include&colon;
      * Lot Number
      * Plan Number
      * Geocode
      * Geocode Type
      * Unit Type
      * Unit Number
      * Level
      * Building/Complex Name
      * Street Number
      * Street Name or Property Name
      * Street Suffix
      * Street Type
      * Locality
      * State
    
    Postcode data is not part of the QAMF but is available from the PLSplus service.
    
    Note&colon; Users should be aware that not all properties have an address. These include properties where the LGA does not hold an interest, eg a National Park or unallocated Crown Land. Some properties (like gated or Indeginous communities) have multiple addresses within them. Multi-
    
    Address properties are catered for in PLSplus.
    
    Interstate addresses is sourced from The GNAF (Geocoded National Address File) which has the same Attributes minus the Plan Number of the property.
    
    ## Functionality Available
    
    Under a whole of government agreement approved users may access the following PLS plus functionality for the exclusive benefit of the approved user (Licensed Purpose), free of software licensing costs&colon;
      * Address validation against the QAMF
      * Appending latitude/longitude to an address using the QAMF
      * Appending lot/plan information to an address using the QAMF
      * Looking up addresses in the QAMF from a given lot and plan number
      * Looking up addresses in the QAMF from a given latitude and longitude
      * Australian postcodes
      * Australian mesh blocks (ASGS2011)
      * Failover to a 3rd party provider
      * Interstate address validation through a 3rd party provider.
    
    Batch processing on the server side is not offered at this point in time. The Qld Geocoder application, used for batching up to 5000 addresses. LotPlans or geocodes, is available at http&colon;//geocode.information.qld.gov.au. The application requires a comma delimited (CSV) file of addresses and uses the ParseAddress, ValidateLotPlan or ValidateCoordinate operations. Full documentation is available at the above URL.Individual validations are also available with the application.
    
    ## Support Services
    
    DNRME will supply&colon;
    * Business support&colon; described as granting access to the individual services and general business requests, and
    * Technical support&colon; described as support for the physical environment and associated hardware.
    
    Integration with applications, training and other support services within the user’s area is the responsibility of each user.
    
    ## Service Security
    The QG versions of the service is made available to approved authenticated users, both internal to DNRME and other Queensland Government agencies.
    
    ## Obtaining the Service
    The QG version of the service requires authentication by way of a username and password.
    
    Access to the QG service and provision of credentials can be obtained by sending a request to OpenData@dnrme.qld.gov.au and providing the following information&colon;
        
    
       * Preferred username*&colon; (eg plspQr-floodinfo) 
       * Project or application name&colon; (eg Floodinfo) 
       * Service requested - REST Company/Department Name
       * Responsible Officer Name&colon;
       * Responsible Officer Email&colon; (Must be shared mailbox) 
       * Responsible Officer Phone&col
       * Secondary Contact Name&colon;
       * Secondary Contact Email&colon;
       * Secondary Contact Phone&colon;
       * Give an indication of the category your applications fall into&colon;
         * Life Threatening - Used for emergency purposes (24/7 needed)
         * Critical - Used for business purposes business hours (counter or online)
         * Non Critical - Used for business purposes
    
     Note&colon; the user name will start with plspQr_ for QG version users.
     
     
    Logging and auditing usage of the service helps by providing the metrics for determining requirements for enhancements to the service, infrastructure and data.
    * To ensure an accurate record of usage by applications, please request an account for each separate project or application.
    * Do not pass the credentials to other staff for use in other projects or applications.
    Following approval from the delegated officer, credentials for the required service/s will be provided.
    
    If the following message is returned from a request it may be due to authentication problems&colon;
    
    "status"&colon; "error",
    
    “This request was rejected due to a violation. Please contact OpenData@dnrme.qld.gov.au, and provide this reference ID&colon; 12719710694116814232"}
    
    
    Take a note of the time of the request and include it and your username in an email to OpenData@dnrme.qld.gov.au for assistance.
    
    ## Licensing
    
    The Property Location Service Plus – QG is offered under a Creative Commons Attribution licence. To view a copy of this license visit https&colon;//creativecommons.org/licenses/by/4.0/. The Department requests attribution in the following manner&colon; Natural Resources and Mines, Queensland Government, Property Locations Service Plus - QG, licensed under Creative Commons Attribution.
    
    ## Charging and Pricing
    
    In this release of the PLSplus-QG there is no intention to develop a charge for Government departments. If, in subsequent releases additional functionality is added, charging for the additional functionality may be considered.

    
    ## Service Availability
    <table>
      <thead>
        <tr>
          <th>Support Category</th>
          <th>Hours of Operation</th>
          <th>Support Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Business Support</td>
          <td>8am – 5pm Business Days *</td>
          <td>Business support is described as granting access to the individual services and general business requests.</td>
        </tr>
        <tr>
          <td>Technical Support</td>
          <td>8am – 5pm Business Days *</td>
          <td>Technical support is described as support for the physical environment and associated hardware.</td>
        </tr>
        <tr>
          <td>Service Availability</td>
          <td>Approaching 24 x 7</td>
          <td>Dependent upon scheduled system maintenance and hardware or software failur.</td>
        </tr>
      </tbody>
    </table>

     \* Business days mean a day that is not a Saturday, Sunday, Queensland Public Holiday, or day between 25 December and 1 January inclusive. 
    
    Should the service fail outside business or technical support hours, the service may not return until the next business day.
    
    ## PLSplus-QG at a glance
    * PLSplus is based on Addressing Standards AS AS4819 and AS4590. Users will see major changes in the schema of the responses from original Land XML format.
    * The service requires Method Type &colon;POST and Payload Type &colon;application/json
    * Postcodes (where in use) are returned with addresses.
    * Unit types and Building Level information has been implemented (though not extensive in
    addressing database). A list of unit types is available in Section 11 of this document.
    * Address and geocode type are returned with the response. (PC parcel centroid, BC Building
    Centroid, PAP Property Access Point etc)
    * Confidence values are always returned (see confidence levels Section 11.3.1)
    * A result element called “Metadada” is returned. It shows the “FullAddressString” for Physical
    and Service addresses as well as the “DeliveryTypeCode” and “DeliveryIdentifier” for service
    addresses.
    * Addresses are either Physical (real address) or Mail Service Address (available in PLSplus-
    Premium) and shown respectively.
      * &lt;PhysicalAddressIndicator>Y&lt;/PhysicalAddressIndicator> 
      * &lt;PhysicalAddressIndicator>N&lt;/PhysicalAddressIndicator>
    
    Postcodes where available are supplied as part of the address response. It should be remembered that Postcodes do not form part of an address but are for Australia Post Delivery purposes. There may be some descrepancies with postcode where Australia Post has deviated from approved Locality boundaries. Please note that some parts of Qld (and Australia) do not have a postcode. In these cases the Postcode element is not included in the response.
  contact: {}
  version: '1.0'
servers:
- url: https://information.qld.gov.au/service/Addressing/ValidationService/PLSplusQG/rest
  description: This is the production endpoint
  variables: {}
- url: https://uatplsp.information.qld.gov.au/service/Addressing/ValidationService/PLSplusQG/rest/
  description: For development use this UAT endpoint
  variables: {}
paths:
  /ValidateAddress:
    post:
      tags:
      - PLSp-QG
      summary: ValidateAddress
      description: |
        # Design Requirements
        The ValidateAddress operation validates the existence of a requested address and returns possible addresses that best match the search criteria if no identical match is found.
        
        The ValidateAddress operation also geocodes the address and returns the geocoded coordinates available in the QAMF database (and Interstate for plusQG users). Parcel information is available for Qld addresses only.
        
        * MeshblockOption is mandatory and must be either “Include” or “Exclude” (Case sensitive).
        * RoadName is broken into three fields (NAME, TYPE and SUFFIX). The “NAME” is the only
        other mandatory field in the request.
          * RoadName can consist of a “name”,“name and type” or “name and type and suffix”.
             * McCaul
             * McCaul Street
             * McCaul Street North
        * The ValidateAddress operation supports alias locality names (adjoining, neighbouring or "broader area" localities)
        * The ValidateAddress operation flexibly matches road type, road suffix, locality, postcode and local government. Flexibility includes&colon;
        * The ability tohandleabbreviations(roadtypes,suffix).
        * The ability to locate road names that sound similar (first uses its own logic before trying a soundex or similar logarithm).
          * Road names are first tested against locality/locality alias before soundex is used.
          * The ability to support alias or vanity neighbourhood locality names.
          * Ability to recognize Building Level Types and identifiers
          * Ability to recognise Complex/Building names
          * Postcodes (where they exist) are supported for all requests.
        * If a street name (only), without a street type and street suffix is requested, the operation returns all street types for the street name plus all the street suffixes for that street name. The results would the be as such&colon;
          * All street types (and street suffixes) are found for the requested street name and then all locations are returned for that street name, type (and street suffixes). Note that if more than the predefined maximum number of 500 addresses is returned, the response would be “too many results found”.
        * If a street number and street name are requested (but no street type), the operation should find all street types (and street suffix) for the street name and the results would be the following&colon;
          * The street type (and street suffix) is found for the street name.If a match can not be found for the street number – all locations for that street name (and street suffix) are returned. Note that if more than a predefined (user definable) maximum number of addresses is returned, the response would be “too many results found”.
        * If only a building name is requested. The operation will find all building names in the dataset that have a name that best matches (including soundex possibilities) of the requested property name, if there is not an exact match.
        * The following Unit types (steadily increasing in QAMF) are catered for
          * APT(Apartment),FY(Factory),F(Flat),MB(MarineBerth),PTHS(Penthouse),OFF (Office), RM (Room), SHED (Shed), SHOP (Shop), SITE (Site), SL (Stall), SE (Suite), U (Unit), VLLA (Villa), WE (Warehouse).
        * The unit number and street number may be a range of values. Following are examples&colon;
          * 12-24
          * 12A-24 
          * 12A-24B
        * The ValidateAddress operation applies flexible matching of addresses. The following is the priorities/process that are followed when determining the staus of an address.

        ### Address Logic Process flow
        * Optimistic validation&colon;
          * Assumetheaddressexistsandsearchdatabaseforexactmatchonstreetnumber,
        street name and locality
            * Road based – fuzzy match on roads within locality
            * Road based – fuzzy match on roads within locality alias and postcodes
            * Full validation (the original process from original PLS with some modifications to improve results – See below for detail)
        * Search by&colon;
          * Roadname,type,suffix,locality,localauthority
          * Roadname,locality,localauthority
          * Roadname,locality
          * Roadname,locality,localauthority(soundexonroadname)
          * Roadname,locality(soundexonroadname)
          * Roadname,locality(soundexonboth)
          * Roadname
          * Roadname(soundex)
          * If an address does not exact match the requested address the process will follow the following logic
            * Disregard the unit number and search on street number, street name
        (including street type and street part), locality (and alias Locality) and local
        government.
            * Disregard the unit and street number and search on the street name (including street type and street part), locality and local government.
            * Disregard the unit and street number, street type and part and search on street name,
            locality and local government.
            * Disregard the unit and street number, street type and part and locality and search for the requested street name within the local government or adjoining localities.
            * Disregard the unit number, street number, street type, street part, locality and local government and search on the requested street name.
            * Search for the street name with soundex only
            * Search for the street name with soundex and local government name.
            * Search for the street name with soundex, locality with soundex and local government name.
            * Search for the street name with soundex, streettype, locality with soundex and local government name.
            * Search for the street name with soundex, streettype, streetpart, locality with soundex and local government name.
            * Search for the street number,street name with soundex, street type, street part,
            locality with soundex and local government name.
            * Search for unit number, street number, street name with soundex, street type, street part, locality with soundex and local government name.
        
        The PLSplusQG version offers interstate addressing and the “state” (other than Qld) must be specified for it to be interpreted as a non Qld adrdess. Interstate names must match the list of interstate abbreviations in Section 15.2.
        
        **For endpoints and Json Request example see Appendix Technical Information**
        
        Notes about request
        * Physical Addresses only
        * Meshblock Option (“Include” or “Exclude”) must be stipulated. (case sensitive)
        * At least a Street Name or Building Name must be supplied
        * No wildcards allowed
        * All elements are case sensitive
        * If both the locality and local government are entered the locality must be within the local
        government
        * If only a local government name is entered the localities within the local government are
        determined and used in the search
        * A list of locality and local government names recognised by the service can be provided on
        request. Be aware that the list changes regularly.
        * “Alias” Localities are used as substitutes for adjoining or “unapproved” communal named
        localities. Localities sharing the same postcode are also used as “aliases”.
        * State name is “Qld” unless otherwise specified.
      operationId: ValidateAddress
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLSPlus_ValidateAddress_InputMessage'
        required: true
      responses:
        '200':
          description: Successfully retrieved the response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLSPlus_ValidateAddress_OutputMessage'
      deprecated: false
  /ValidateLotPlan:
    post:
      tags:
      - PLSp-QG
      summary: ValidateLotPlan
      description: ValidateLotPlan
      operationId: ValidateLotPlan
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLSPlus_ValidateLotPlan_InputMessage'
        required: true
      responses:
        '200':
          description: Successfully retrieved the response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLSPlus_ValidateLotPlan_OutputMessage'
      deprecated: false
  /ParseAddress:
    post:
      tags:
      - PLSp-QG
      summary: ParseAddress
      description: ParseAddress
      operationId: ParseAddress
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLSPlus_ParseAddress_InputMessage'
        required: true
      responses:
        '200':
          description: Successfully retrieved the response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLSPlus_ParseAddress_OutputMessage'
      deprecated: false
  /ValidateCoordinates:
    post:
      tags:
      - PLSp-QG
      summary: ValidateCoordinates
      description: ValidateCoordinates
      operationId: ValidateCoordinates
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLSPlus_ValidateCoordinates_InputMessage'
        required: true
      responses:
        '200':
          description: Successfully retrieved the response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLSPlus_ValidateCoordinates_OutputMessage'
      deprecated: false
  /AutoCompleteAddress:
    post:
      tags:
      - PLSp-QG
      summary: AutoCompleteAddress
      description: AutoCompleteAddress
      operationId: AutoCompleteAddress
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLSPlus_AutoCompleteAddress_InputMessage'
        required: true
      responses:
        '200':
          description: Successfully retrieved the response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLSPlus_AutoCompleteAddress_OutputMessage'
      deprecated: false
components:
  schemas:
    ValidateAddress:
      title: ValidateAddress
      required:
      - MeshblockOption
      type: object
      properties:
        MeshblockOption:
          $ref: '#/components/schemas/MeshblockOption'
        LevelType:
          type: string
          description: Alpha or numeric identifier
          example: 'L'
        LevelNumber:
          type: string
          example: 'D'
        UnitType:
          type: string
          example: 'Unit'
        UnitNumber:
          type: string
          example: '201'
        BuildingName:
          type: string
          example: ''
        NumberFirst:
          type: string
          example: '160'
        NumberSuffixFirst:
          type: string
          example: ''
        NumberLast:
          type: string
          example: ''
        NumberSuffixLast:
          type: string
          example: ''
        Road:
          $ref: '#/components/schemas/RoadName'
        LocalityName:
          type: string
          example: 'TOWNSVILLE'
        LocalGovernmentName:
          type: string
        StateName:
          type: string
          example: 'QLD'
        PostCode:
          type: string
          example: '4000'
    MeshblockOption:
      title: MeshblockOption
      description: |
        Mesh Blocks (ASGS2011) data is available (Include) for address confidenece level of 85 or greater. The option selected is case sensitive.
      enum:
      - Include
      - Exclude
      type: string
    RoadName:
      title: RoadName
      type: object
      properties:
        Name:
          type: string
          example: 'Denham'
        Type:
          type: string
          example: 'ST'
        Suffix:
          type: string
          example: ''
    ValidateAddressResponse:
      title: ValidateAddressResponse
      required:
      - ResultCount
      type: object
      properties:
        ResultCount:
          type: integer
          format: int32
        Results:
          $ref: '#/components/schemas/ArrayOfResult'
    ArrayOfResult:
      title: ArrayOfResult
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/Result'
          description: ''
    Result:
      title: Result
      type: object
      properties:
        PhysicalAddressIndicator:
          type: string
        MetaData:
          type: array
          items:
            $ref: '#/components/schemas/MetaData'
          description: ''
        Address:
          $ref: '#/components/schemas/Address'
        Parcel:
          $ref: '#/components/schemas/Parcel'
        LocalGovernmentArea:
          $ref: '#/components/schemas/LocalGovernmentArea'
        Geocode:
          type: array
          items:
            $ref: '#/components/schemas/Geocode'
          description: ''
        Aliases:
          $ref: '#/components/schemas/ArrayOfAddress'
        Confidence:
          type: integer
          format: int32
          example: 100
    MetaData:
      title: MetaData
      description: A repeating Name Value pair
      type: object
      properties:
        Name:
          type: string
          example: 'Timestamp'
        Value:
          type: string
          example: '2019-04-12T11:33:28.5336917+10:00'
    Address:
      title: Address
      type: object
      properties:
        RoadNumber:
          $ref: '#/components/schemas/RoadNumber'
        Road:
          $ref: '#/components/schemas/Road'
        SiteName:
          type: string
          example: 'ACACIA CLOSE'
        Unit:
          $ref: '#/components/schemas/Unit'
        Level:
          $ref: '#/components/schemas/Level'
        Locality:
          type: string
          example: 'ASHMORE'
        State:
          type: string
          example: 'QLD'
        Postcode:
          type: string
          example: '4000'
    RoadNumber:
      title: RoadNumber
      description: Road Number object contain the unique road number identifier
      type: object
      properties:
        First:
          type: string
          description: First number in the road ID range
          example: 1
        Last:
          nullable: true
          type: string
          description: Last number in the road ID range
          example: 
    Road:
      title: Road
      type: object
      description: Road element containing the broken down information of the road
      properties:
        Name:
          type: string
          description: Name of the road
          example: Plum
        TypeCode:
          type: string
          description: Road type (e.g. street, road, etc)
          example: PDE
        Suffix:
          type: string
          description: Additional suffix in the road name (e.g. north, west, etc)
          example: 'north'
    Unit:
      title: Unit
      type: object
      properties:
        TypeCode:
          type: string
          nullable: true
          enum:
           - FY
           - F
           - U
           - WE
           - SL
           - OFF
           - MB
           - SHED
           - OFFC
           - VLLA
           - SITE
           - APT
           - SE
           - TNHS
           - HSE
           - WSHE
           - PTHS
          description: |
              Unit type (e.g. Apartment, Suite, Office, etc)&colon;
              * `FY` - Factory
              * `F` - Flat
              * `U` - Unit
              * `WE` - Warehouse 
              * `SL` - Stall
              * `OFF` - Office
              * `MB` - Marine Berth
              * `SHED` - Shed
              * `OFFC` - Office ROOM Room
              * `VLLA` - Villa
              * `SITE` - Site
              * `APT` - Apartment SHOP Shop
              * `SE` - Suite
              * `TNHS` - Townhouse
              * `HSE` - House
              * `WSHE` - Warehouse
              * `PTHS` - Penthouse
          example: TNHS
        Number:
          description: Unit number
          type: string
          example: 2
    Level:
      title: Level
      type: object
      properties:
        TypeCode:
          type: string
          nullable: true
          enum:
           - B
           - G
           - L
           - LG
           - M
           - UG
          description: |
            Level type of the address in a of multi-storied building (e.g. Floor, Basement, Mezzanine)&colon;
            * B - Basement FL Floor
            * G - Ground
            * L - Level
            * LG - Lower Ground 
            * M - Mezzanine 
            * UG - Upper Ground
          example: 'L'
        Number:
          type: string
          description: Level Number
          example: '1'
    Parcel:
      title: Parcel
      type: object
      properties:
        Lot:
          type: string
          description: Lot number on the survey plan
          example: '5'
        Plan:
          type: string
          description: Survey plan number
          example: 'BUP9763'
    LocalGovernmentArea:
      title: LocalGovernmentArea
      type: object
      properties:
        Code:
          type: string
          description: Local government area unique identifier
          example: '5010'
        Name:
          type: string
          description: Local government area name
          example: 'MORETON BAY REGIONAL'
    Geocode:
      title: Geocode
      required:
      - Latitude
      - Longitude
      type: object
      properties:
        TypeCode:
          type: string
          description: |
            Geo coordinate type (e.g. Parcel Centroid, Building Centroid, etc)

            <table><thead><tr>
            <th>Geocode Type Code</th>
            <th>Geocode feature type</th>
            <th>Description</th>
            </tr></thead>
            <tbody>
            <tr><td>BAP</td><td>Building access point</td><td>Point of access to the building</td></tr>
            <tr><td>BC</td><td>Building centroid</td><td>Geometrically defined centre of building. However the point shall lie within the bounded polygon (e.g. for U shaped building).</td></tr>
            <tr><td>CDF</td><td>Centreline dropped frontage</td><td>A point on the road centreline opposite the centre of the road frontage of an address site</td></tr>
            <tr><td>DF</td><td>Driveway frontage</td><td>Centre of driveway on address site frontage</td></tr>
            <tr><td>EF</td><td>Emergency access</td><td>Specific building or property access point for emergency services</td></tr>
            <tr><td>EAS</td><td>Emergency access Secondary</td><td>Specific building or property secondary access point for emergency services</td></tr>
            <tr><td>FC</td><td>Frontage centre</td><td>Point on the centre of the address site frontage</td></tr>
            <tr><td>FCS</td><td>Frontage centre setback</td><td>A point setback from the centre of the road frontage within an address site. The setback should be specified. </td></tr>
            <tr><td>FDA</td><td>Front door access</td><td>Front door of building
            <tr><td>LB</td><td>Letterbox</td><td>The mailbox</td></tr>
            <tr><td>PAP</td><td>Property access point</td><td>Access point (centre of) at the road frontage of the property</td></tr>
            <tr><td>PAPS</td><td>Property access point setback</td><td>A point set back from the (centre of the) access point at the road frontage of the property. The setback should be specified.</td></tr>
            <tr><td>PC</td><td>Property centroid</td><td>Geometrically defined centre of parcels making up a property. However the point shall lie within the bounded polygon (e.g. for U shaped property).</td></tr>
            <tr><td>STCP</td><td>service type connection</td><td>The utility connection point (e.g. box, or underground chamber). ‘Service type’ to be specified (e.g. water, electricity etc)</td></tr>
            <tr><td>STM</td><td>service type meter</td><td>The utility meter (e.g. box, or underground chamber). ‘Service type’ to be specified (e.g. water, electricity etc)  </td></tr>
            <tr><td>TGP</td><td>Temporary Geocode</td><td>Used to show the approx. location of a “Strata” parcel</td></tr>
            <tr><td>UC</td><td>Unit centroid</td><td>Geometrically defined centre of unit. The point has to lie within the bounded polygon (e.g. for U shaped unit)</td></tr>
            </tbody></table>
          example: 'PC'
          nullable: true
          enum:
           - BAP
           - BC
           - CDF
           - DF
           - EF
           - EAS
           - FC
           - FC
           - FCS
           - FDA
           - LB
           - PAP
           - PAPS
           - PC
           - STCP
           - STM
           - TGP
           - UC
        Latitude:
          type: number
          description: Geo coordinate Latitude
          example: -28.00323935
        Longitude:
          type: number
          description: Geo coordinate Longitude
          example: 153.33099322
    ArrayOfAddress:
      title: ArrayOfAddress
      type: object
      properties:
        Address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: ''
    ValidateLotPlan:
      title: ValidateLotPlan
      required:
      - MeshblockOption
      type: object
      properties:
        MeshblockOption:
          $ref: '#/components/schemas/MeshblockOption'
        LotNumber:
          type: string
        PlanNumber:
          type: string
    ValidateLotPlanResponse:
      title: ValidateLotPlanResponse
      required:
      - ResultCount
      type: object
      properties:
        ResultCount:
          type: integer
          format: int32
        Results:
          $ref: '#/components/schemas/ArrayOfResult'
    ParseAddress:
      title: ParseAddress
      required:
      - MeshblockOption
      type: object
      properties:
        MeshblockOption:
          $ref: '#/components/schemas/MeshblockOption'
        AddressString:
          type: string
          example: '27 PLUM PDE NERANG QLD 4211'
    ParseAddressResponse:
      title: ParseAddressResponse
      required:
      - ResultCount
      type: object
      properties:
        ResultCount:
          type: integer
          format: int32
        Results:
          $ref: '#/components/schemas/ArrayOfResult'
    ValidateCoordinates:
      title: ValidateCoordinates
      required:
      - MeshblockOption
      - Latitude
      - Longitude
      type: object
      properties:
        MeshblockOption:
          $ref: '#/components/schemas/MeshblockOption'
        Latitude:
          type: number
          example: -28.00323935
       
        Longitude:
          type: number
          example: 153.33099322
    ValidateCoordinatesResponse:
      title: ValidateCoordinatesResponse
      required:
      - ResultCount
      type: object
      properties:
        ResultCount:
          type: integer
          format: int32
        Results:
          $ref: '#/components/schemas/ArrayOfResult'
    AutoCompleteAddress:
      title: AutoCompleteAddress
      type: object
      properties:
        request:
          type: string
          example: "27 pl"
    AutoCompleteAddressResponse:
      title: AutoCompleteAddressResponse
      type: object
      properties:
        AutoCompleteAddressResult:
          $ref: '#/components/schemas/ArrayOfString'
    ArrayOfString:
      title: ArrayOfString
      type: object
      properties:
        string:
          type: array
          items:
            type: string
          description: ''
    PLSPlus_AutoCompleteAddress_InputMessage:
      title: PLSPlus_AutoCompleteAddress_InputMessage
      required:
      - AutoCompleteAddress
      type: object
      properties:
        AutoCompleteAddress:
          $ref: '#/components/schemas/AutoCompleteAddress'
    PLSPlus_AutoCompleteAddress_OutputMessage:
      title: PLSPlus_AutoCompleteAddress_OutputMessage
      required:
      - AutoCompleteAddressResponse
      type: object
      properties:
        AutoCompleteAddressResponse:
          $ref: '#/components/schemas/AutoCompleteAddressResponse'
    PLSPlus_ParseAddress_InputMessage:
      title: PLSPlus_ParseAddress_InputMessage
      required:
      - ParseAddress
      type: object
      properties:
        ParseAddress:
          $ref: '#/components/schemas/ParseAddress'
    PLSPlus_ParseAddress_OutputMessage:
      title: PLSPlus_ParseAddress_OutputMessage
      required:
      - ParseAddressResponse
      type: object
      properties:
        ParseAddressResponse:
          $ref: '#/components/schemas/ParseAddressResponse'
    PLSPlus_ValidateAddress_InputMessage:
      title: PLSPlus_ValidateAddress_InputMessage
      required:
      - ValidateAddress
      type: object
      properties:
        ValidateAddress:
          $ref: '#/components/schemas/ValidateAddress'
    PLSPlus_ValidateAddress_OutputMessage:
      title: PLSPlus_ValidateAddress_OutputMessage
      required:
      - ValidateAddressResponse
      type: object
      properties:
        ValidateAddressResponse:
          $ref: '#/components/schemas/ValidateAddressResponse'
    PLSPlus_ValidateCoordinates_InputMessage:
      title: PLSPlus_ValidateCoordinates_InputMessage
      required:
      - ValidateCoordinates
      type: object
      properties:
        ValidateCoordinates:
          $ref: '#/components/schemas/ValidateCoordinates'
    PLSPlus_ValidateCoordinates_OutputMessage:
      title: PLSPlus_ValidateCoordinates_OutputMessage
      required:
      - ValidateCoordinatesResponse
      type: object
      properties:
        ValidateCoordinatesResponse:
          $ref: '#/components/schemas/ValidateCoordinatesResponse'
    PLSPlus_ValidateLotPlan_InputMessage:
      title: PLSPlus_ValidateLotPlan_InputMessage
      required:
      - ValidateLotPlan
      type: object
      properties:
        ValidateLotPlan:
          $ref: '#/components/schemas/ValidateLotPlan'
    PLSPlus_ValidateLotPlan_OutputMessage:
      title: PLSPlus_ValidateLotPlan_OutputMessage
      required:
      - ValidateLotPlanResponse
      type: object
      properties:
        ValidateLotPlanResponse:
          $ref: '#/components/schemas/ValidateLotPlanResponse'
tags:
- name: PLSp-QG
  description: ''

